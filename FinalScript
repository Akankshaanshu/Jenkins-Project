#!/bin/bash
pipeline 
{
     agent any 
     environment {

    PATH = "C:\\WINDOWS\\SYSTEM32"

    }
    tools {
                jdk "JDKDefault"
                maven "MavenDefault"
            }

    stages 
    {
        stage('Start') 
        {
            steps 
            {
                echo 'Project starts from here...!!!!'
            }
        }
        stage('Checkout')
        {
            steps
            {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/ishalinigupta/Jenkins-Project.git']]]
            }
        }
        stage('Build')
        {
            steps
            {
                bat "mvn clean"
            }
        }
        stage('Package')
        {
            steps
            {
                bat "mvn package"
            }
        }
        stage('Uploading Jar file to Nexus Repository')
        {
            steps
            {
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: 'jenkins', 
                        classifier: '', 
                        file: 'target/jenkins-0.0.1-SNAPSHOT.jar', 
                        type: 'jar'
                    ]
                ], 
                credentialsId: 'nexus4', 
                groupId: 'demoproject', 
                nexusUrl: 'localhost:8081', 
                nexusVersion: 'nexus4', 
                protocol: 'http', 
                repository: 'FinalPipeline', 
                version: '1.${BUILD_NUMBER}'
            }
        }
        stage('SonarQube Analysis')
        {
            steps{
                withSonarQubeEnv('sonarqube') {
                    bat 'mvn sonar:sonar -D sonar.login=2dfc94e02c4bc317684cc91e82c6036256ce77a3'
                }
            }
        }
        stage("Quality Gate") {
            steps {
              sleep 10
              timeout(time: 2, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
        stage('Success')
        {
            steps
            {
                echo "Project Succeeded"
            }
        }
        
    }
}

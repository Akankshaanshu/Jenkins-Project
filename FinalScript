#!/bin/bash
pipeline 
{
     agent any 
     environment {

    PATH = "C:\\WINDOWS\\SYSTEM32"

    }
    tools {
                jdk "JDKDefault"
                maven "MavenDefault"
            }

    stages 
    {
        stage('Start') 
        {
            steps 
            {
                echo 'Project starts from here...!!!!'
            }
        }
        stage('Checkout')
        {
            steps
            {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/ishalinigupta/Jenkins-Project.git']]]
            }
        }
        stage('Build')
        {
            steps
            {
                bat "mvn clean"
            }
        }
        stage('Package')
        {
            steps
            {
                bat "mvn package"
            }
        }
       stage('uploading jar file in nexus'){
       
       steps{
       
       nexusArtifactUploader artifacts: [[artifactId: 'jenkins', classifier: '', file: 'pom.xml', type: 'jar']], credentialsId: '4d10e7ab-31fa-4f76-9168-d49066f56faf', groupId: 'demoproject', nexusUrl: 'localhost:8081/', nexusVersion: 'nexus3', protocol: 'http', repository: 'FinalPipeline', version: '0.0.1-SNAPSHOT'}}
       stage('Sonarqube Analysis'){
            steps{
                withSonarQubeEnv(installationName:'sonarqube')
                { // You can override the credential to be used
                    bat 'mvn clean test sonar:sonar -D sonar.login=2dfc94e02c4bc317684cc91e82c6036256ce77a3'
                    
                }
            }
       
        }
        stage("Quality Gate") {
            steps {
              sleep 120
              //timeout(time: 2, unit: 'HOURS') 
                waitForQualityGate abortPipeline: true
              
            }
          }
        stage('Success')
        {
            steps
            {
                echo "Project Succeeded"
            }
        }
        
    }
}
